import json
import os
from datetime import datetime, timezone

def load_template(template_path):
    with open(template_path, "r", encoding="utf-8") as f:
        return json.load(f)

def build_sample_response():
    # Build a minimal sample response that conforms to the template's response_schema
    sample = {
        "summary": "Location: Sample City, As of: 2025-08-29T20:31:00Z.",
        "wildfire_status": {
            "incident_id": "ABC123",
            "name": "Sample Fire",
            "status": "Active",
            "acres": 100,
            "containment": "0%"
        },
        "weather_risks": {
            "probability_of_rain": {
                "percent": 25,
                "time_window": "next 24h",
                "confidence": "low"
            },
            "red_flag_warnings": [
                {
                    "start_time": "2025-08-29T18:00:00Z",
                    "end_time": "2025-08-29T22:00:00Z",
                    "level": "Red Flag",
                    "description": "Low humidity and gusty winds expected"
                }
            ],
            "extreme_changes": [
                {
                    "parameter": "wind",
                    "change": "gusts up to",
                    "magnitude": "35 mph",
                    "time_frame": "next 6-12h"
                }
            ],
            "temperature": {
                "value": 78,
                "units": "F"
            },
            "humidity": {
                "percent": 35
            },
            "wind": {
                "speed": 12,
                "gusts": 25,
                "direction": "NW"
            }
        },
        "road_conditions": {
            "closures": [
                {
                    "road": "I-10",
                    "direction": "NB",
                    "start_time": "2025-08-29T17:00:00Z",
                    "end_time": "2025-08-29T21:00:00Z",
                    "reason": "Nearby wildfire activity",
                    "detour": "Use I-210 as detour"
                }
            ],
            "delays_minutes": 20,
            "visibility": "Moderate",
            "evac_info": "No evacuations at this time"
        },
        "risk_assessment": {
            "overall_risk": "Moderate",
            "notes": "Demo data; replace with live feeds in production."
        },
        "data_sources": [
            {"name": "NOAA", "type": "weather", "url": "https://www.noaa.gov/"},
            {"name": "Cal Fire", "type": "agency", "url": "https://www.fire.ca.gov/"},
            {"name": "Local DOT", "type": "transportation", "url": "https://dot.example/traffic"}
        ],
        "notes": "Demo data generated by quick-start script."
    }
    return sample

def main():
    base_dir = os.path.dirname(os.path.abspath(__file__))
    template_path = os.path.join(base_dir, "wildfire_prompt_template.json")
    # Ensure the template exists; if not, just render sample output
    try:
        _ = load_template(template_path)
        template = True
    except Exception:
        template = False

    result = build_sample_response()

    output_path = os.path.join(base_dir, "sample_wildfire_response.json")
    with open(output_path, "w", encoding="utf-8") as f:
        json.dump(result, f, indent=2)

    print("Demo generated at:", output_path)
    print(json.dumps(result, indent=2))

if __name__ == "__main__":
    main()
